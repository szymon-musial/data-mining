// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using rapidapi_wettercom;

#nullable disable

namespace rapidapi_wettercom.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("rapidapi")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("rapidapi_wettercom.RapidForecastDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Clouds_High")
                        .HasColumnType("integer");

                    b.Property<int>("Clouds_Low")
                        .HasColumnType("integer");

                    b.Property<int>("Clouds_Middle")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("FreshSnow")
                        .HasColumnType("integer");

                    b.Property<bool>("IsNight")
                        .HasColumnType("boolean");

                    b.Property<int>("Period")
                        .HasColumnType("integer");

                    b.Property<int>("Prec_Class")
                        .HasColumnType("integer");

                    b.Property<double>("Prec_Probability")
                        .HasColumnType("double precision");

                    b.Property<double>("Prec_Sum")
                        .HasColumnType("double precision");

                    b.Property<int>("Pressure")
                        .HasColumnType("integer");

                    b.Property<int?>("RainHours")
                        .HasColumnType("integer");

                    b.Property<int>("RelativeHumidity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RequestTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("SunHours")
                        .HasColumnType("integer");

                    b.Property<int>("Temperature_Avg")
                        .HasColumnType("integer");

                    b.Property<string>("Weather_Icon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Weather_State")
                        .HasColumnType("integer");

                    b.Property<string>("Weather_Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Wind_Avg")
                        .HasColumnType("integer");

                    b.Property<string>("Wind_Direction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Wind_SignificationWind")
                        .HasColumnType("boolean");

                    b.Property<string>("Wind_Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Wind_Unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Windchill_Avg")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("RapidForecast", "rapidapi");
                });
#pragma warning restore 612, 618
        }
    }
}
